version: '3.8'

services:
  registry-discovery:
    container_name: eureka-server
    image: appointment/microservice-docker-eureka-server:0.0.1-SNAPSHOT
    ports:
      - 8761:8761
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
    networks:
      - discovery-network

  configuration:
    container_name: config-server
    image: appointment/microservice-docker-config-server:0.0.1-SNAPSHOT
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=${EUREKA_SERVER}
        -DSPRING_CLOUD_CONFIG_SERVER_GIT_URI=${SPRING_CLOUD_CONFIG_SERVER_GIT_URI}
        -DSPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
        -DSPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
    depends_on:
      - registry-discovery
    ports:
      - 8888:8888
    networks:
      - discovery-network

  administration:
    container_name: admin-server
    image: appointment/microservice-docker-admin-server:0.0.1-SNAPSHOT
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=${EUREKA_SERVER}
    depends_on:
      - registry-discovery
    ports:
      - 8762:8762
    networks:
      - discovery-network

  owner:
    container_name: owner-service
    image: appointment/microservice-docker-owner:0.0.1-SNAPSHOT
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=${EUREKA_SERVER}
        -Dspring.profiles.active=dev
    depends_on:
      - registry-discovery
      - configuration
    networks:
      - discovery-network
      - postgres-network

  postgres:
    container_name: postgres-service
    image: postgres:16.1
    command: postgres -c 'max_connections=200'
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${PGS_USER}
      POSTGRES_PASSWORD: ${PGS_PASSWORD}
      POSTGRES_DB: ${PGS_DB}
      PGDATA: /tmp
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: "exit 0"
    networks:
      - postgres-network

  pgadmin:
    container_name: pgadmin-service
    image: dpage/pgadmin4:8.14
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGA_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGA_PASSWORD}
    ports:
      - 8080:80
    depends_on:
      - postgres
    networks:
      - postgres-network

volumes:
  postgres-data:
    driver: local

networks:
  discovery-network:
    driver: bridge
  postgres-network:
    driver: bridge
